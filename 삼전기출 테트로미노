# https://jeongchul.tistory.com/670

n, m = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]
tetromino = [ #캡처본 참고
    [(0,0), (0,1), (1,0), (1,1)], # 0
    [(0,0), (0,1), (0,2), (0,3)], # 1
    [(0,0), (1,0), (2,0), (3,0)], # 2
    [(0,0), (0,1), (0,2), (1,0)], # 3
    [(1,0), (1,1), (1,2), (0,2)], # 4
    [(0,0), (1,0), (1,1), (1,2)], # 5
    [(0,0), (0,1), (0,2), (1,2)], # 6
    [(0,0), (1,0), (2,0), (2,1)], # 7
    [(2,0), (2,1), (1,1), (0,1)], # 8
    [(0,0), (0,1), (1,0), (2,0)], # 9
    [(0,0), (0,1), (1,1), (2,1)], #10
    [(0,0), (0,1), (0,2), (1,1)], # 11
    [(1,0), (1,1), (1,2), (0,1)], # 12
    [(0,0), (1,0), (2,0), (1,1)], # 13
    [(1,0), (0,1), (1,1), (2,1)], # 14
    [(1,0), (2,0), (0,1), (1,1)], # 15
    [(0,0), (1,0), (1,1), (2,1)], # 16
    [(1,0), (0,1), (1,1), (0,2)], # 17
    [(0,0), (0,1), (1,1), (1,2)]  # 18
]

def find(x, y): # 하나의 tetromino 대입 시 합계
    global big
    for i in range(19):
        total = 0
        for j in range(4): # tetromino 각각 4칸으로 이루어짐
            try:
                nx = x+tetromino[i][j][0] # x 좌표
                ny = y+tetromino[i][j][1] # y 좌표
                total += board[nx][ny] 
            except IndexError:  # 현재 위치에서 테트로미노가 board 밖으로 나감
                continue
        big = max(big, total)
        
def solve():
    for i in range (n):
        for j in range(m):
            find(i, j)
            
big=0
solve()
print(big)
