import java.util.*;

class Solution {
    
    public int[] solution(int[] answer) { //hint
        
        int [] arr1 = {1,2,3,4,5};
        int [] arr2 = {2,1,2,3,2,4,2,5};
        int [] arr3 = {3,3,1,1,2,2,4,4,5,5};
        int [] count = new int [3];

        for(int i=0 ;i<answer.length; i++){
            if(answer[i]==arr1[i%(arr1.length)]) count[0]++;
            if(answer[i]==arr2[i%(arr2.length)]) count[1]++;
            if(answer[i]==arr3[i%(arr3.length)]) count[2]++;
        }

        int max = Math.max(count[0], Math.max(count[1], count[2])); //hint
        ArrayList<Integer> list = new ArrayList<>();
        if(max == count[0]) {list.add(1);}
        if(max == count[1]) {list.add(2);}
        if(max == count[2]) {list.add(3);}
        
        //linked list를 array로 변환 
        return list.stream().mapToInt(i->i.intValue()).toArray(); //hint
    }
} //100%

/*import java.util.ArrayList;
class Solution {
    public int[] solution(int[] answer) {
        int[] a = {1, 2, 3, 4, 5};
        int[] b = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] c = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int[] score = new int[3];
        for(int i=0; i<answer.length; i++) {
            if(answer[i] == a[i%a.length]) {score[0]++;}
            if(answer[i] == b[i%b.length]) {score[1]++;}
            if(answer[i] == c[i%c.length]) {score[2]++;}
        }
        int maxScore = Math.max(score[0], Math.max(score[1], score[2]));
        ArrayList<Integer> list = new ArrayList<>();
        if(maxScore == score[0]) {list.add(1);}
        if(maxScore == score[1]) {list.add(2);}
        if(maxScore == score[2]) {list.add(3);}
        return list.stream().mapToInt(i->i.intValue()).toArray();
    }
}
*/

import java.util.*;

class Solution {
    public int[] solution(int[] answers) {
        int[] answer = {};
        
        int[] one = {1, 2, 3, 4, 5};
        int[] two = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] three = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int[] count = new int [3];
        
        for(int i=0; i<answers.length; i++){
            if(answers[i]==one[i%(one.length)]) count[0]++;
            if(answers[i]==two[i%(two.length)]) count[1]++;
            if(answers[i]==three[i%(three.length)]) count[2]++;
        }
        
        int max=Math.max(count[0], Math.max(count[1], count[2]));
        LinkedList<Integer> list = new LinkedList<>();
        if(max==count[0]) list.add(1);
        if(max==count[1]) list.add(2);
        if(max==count[2]) list.add(3);
        
        answer=new int[list.size()];
        for(int i=0; i<list.size(); i++) answer[i]=list.get(i);
        
        return answer;
    }
}//2차 


import java.util.*;

class Solution {
    public int[] solution(int[] answers) {
        int[] one = {1, 2, 3, 4, 5};
        int[] two = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] three = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int[] count = new int [3];
        for(int i=0; i<answers.length; i++){
            if(answers[i]==one[i%(one.length)]) count[0]++;
            if(answers[i]==two[i%(two.length)]) count[1]++;
            if(answers[i]==three[i%(three.length)]) count[2]++;
        }
        
        int max=Math.max(count[0], Math.max(count[1], count[2]));
        LinkedList<Integer> list = new LinkedList<>();
        if(max==count[0]) list.add(1);
        if(max==count[1]) list.add(2);
        if(max==count[2]) list.add(3);
        
        int[] output=new int[list.size()];
        for(int i=0; i<list.size(); i++) output[i]=list.get(i);
        return output;
    }
} //100%


import java.util.*;

class Solution {
    public int[] solution(int[] answers) {
        
        int[] one={1, 2, 3, 4, 5};
        int[] two={2, 1, 2, 3, 2, 4, 2, 5};
        int[] three={3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int[] answer=new int[3];
        
        for(int i=0; i<answers.length; i++) {
            if(answers[i]==one[i%one.length]) answer[0]++;
            if(answers[i]==two[i%two.length]) answer[1]++;
            if(answers[i]==three[i%three.length]) answer[2]++;
        }
        
        int max=Math.max(answer[0], Math.max(answer[1], answer[2]));
        ArrayList<Integer> list =new ArrayList<>();
        for(int i=0; i<3; i++) {
            if(max==answer[i]) list.add(i+1);
        }
        
        int[]output=new int[list.size()];
        for(int i=0; i<list.size(); i++) output[i]=list.get(i);
        return output;
    }
} //100%
