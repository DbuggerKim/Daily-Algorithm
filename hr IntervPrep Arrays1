import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    
    static int count=0;
    
    static int mergeSort(int[] arr, int start, int end) {
        
        int []list = new int[arr.length];

        if(start<end) {
            int mid = (start+end)/2;
            mergeSort(arr, start, mid);
            mergeSort(arr, mid +1 , end);

            int a = start;
            int b = mid+1;
            int index = a;
            
            while(a<=mid || b<=end) {
                if(b>end || (a<=mid && arr[a]<=arr[b])){
                    list[index++]=arr[a++];
                    count++;
                }
                else {
                    list[index++]=arr[b++];
                    count++;
                }
            }
            
            for(int i=start; i<=end; i++)
                arr[i]=list[i];
        }
        
        return count;
    }

    static int minimumSwaps(int[] arr) {
        int size=arr.length;
        int num=mergeSort(arr, 0, size-1);
        return num;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int res = minimumSwaps(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
