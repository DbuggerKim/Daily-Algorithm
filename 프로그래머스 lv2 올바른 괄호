import java.util.*;

class Solution {
    boolean solution(String s) {
        boolean answer = true;
        Stack<Character> stack = new Stack<Character>();

        for(int i=0; i<s.length(); i++){
            if(s.charAt(i) == '(') stack.push('(');
            else{ //s.charAt(i) == ')')
                if(stack.isEmpty()) return false;
                else stack.pop();
            }
        }
        answer=(stack.isEmpty()) ? true : false;
        return answer;
    }
}

/*
import java.util.*;
import java.lang.*;

import java.util.*;

class Solution {
    boolean solution(String s) {
        boolean answer = false;

        Stack <Character> stack = new Stack <>();
        
        for(int i=0; i<s.length(); i++){
            if(stack.empty() || s.charAt(i)=='('){
                stack.push(s.charAt(i));
            }
            if(s.charAt(i)==')'){ 
                if(stack.peek()=='(') stack.pop();
                else stack.push(s.charAt(i));
            }
        }
        
        if(stack.size()==0) answer=true;

        return answer;
    }
}
*/ 100% TO

import java.util.*;

class Solution {
    boolean solution(String s) {
        boolean answer=true;
        Stack<Character> stack = new Stack<>();

        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            if(!stack.isEmpty()){
                if(stack.peek()=='(' && c==')'){
                    stack.pop();
                    continue;
                }
            }
            stack.push(c);
        }
        
        if(!stack.isEmpty()) answer=false;
        return answer;
    }
}//100% TO

import java.util.*;

class Solution {
    boolean solution(String s) {
        boolean answer=true;
        Stack<Character> stack = new Stack<>();

        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            if(c=='(') stack.push(c);
            else{
                if(stack.isEmpty()) stack.push(c);
                else if(!stack.isEmpty() && stack.peek()=='(') stack.pop();
            }
        }
        
        if(!stack.isEmpty()) answer=false;
        return answer;
    }
}//100%
