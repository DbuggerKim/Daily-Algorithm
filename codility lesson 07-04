import java.util.Stack;

class Solution {
    public int solution(int[] H) {

    Stack<Integer> stack = new Stack<>();
    int count=0;

    for (int i=0; i<H.length; i++) {
        while (!stack.isEmpty() && stack.peek() > H[i])
		stack.pop();
        if (stack.isEmpty() || stack.peek() < H[i]){
            stack.push(H[i]);
            count++;
        }
    }

    return count;
    }
}

//문제 해석 
/*
* 돌담을 구성하는데 필요한 최소 블럭을 구하기
* 돌담의 이전 높이를 기준으로 현재 높이가 낮으면 현재 높이 기준으로 기준점이 낮춰지고 이전 높았던 높이는 별개의 블럭이 되면서 제거 된다.
    * 현재 높이 보다 이전 블럭이 낮아질때까지 계속 제거 해 나감.
    * 현재 높이랑 이전 블럭이 같으면 같은 블럭으로 통합 가능 하기 때문에 그냥 유지함.
* 이전 높이 보다 현재 높이가 높으면 카운트 증가, 스택 추가
* 이전 높이 보다 현재 높이가 적으면 높아질 때까지 스택 제거
*/
