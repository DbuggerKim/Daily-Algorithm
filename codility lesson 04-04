
import java.util.*;

class Solution {
    public int solution(int[] A) {
        
        int count=1;
        Arrays.sort(A);        

        for(int i=0; i<A.length; i++){
            if(count==A[i])count++;
            if(count<A[i]) break;
        }

        if(count<A.length) return 0;
        else return 1;

    }
}//58%


//4-1 hash 응용
import java.util.*;

class Solution {
    public int solution(int[] A) {
//hash 활용
        Set<Integer> hash = new HashSet<>();
        for (int i = 0; i < A.length; i++) {
            if (A[i] <= A.length) hash.add(A[i]);
            if(hash.size() == A.length) return 1;

        }
        return 0;
    }  
}
//0%

import java.util.*;

class Solution {
    public int solution(int[] A) {
        
        Set<Integer> map = new HashSet<>();
        Arrays.sort(A);
        
        if(A[A.length-1] <= 0)
            return 1;
        else
            for(int i=0; i<A.length; i++)
                map.add(A[i]);
        
        //1부터 배열에 있는 숫자보다 하나 큰 수
        //소지하지 않으면 return j
        for(int j=1; j<=A[A.length-1]+1; j++){
            if(!map.contains((Integer)j))
                return j;
        }
        return -1;
    }
} //100%
