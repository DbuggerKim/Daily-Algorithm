import java.util.Arrays;
import java.util.Comparator;

class Solution {

	public String solution(int[] numbers) {

		// 숫자를 문자열로 변환
		String[] result = new String[numbers.length];
		for (int i = 0; i < numbers.length; i++) {
			result[i] = String.valueOf(numbers[i]);
		}

		// 정렬 
        //람다식 객체 지향 언어
        
		Arrays.sort(result, (o1, o2) -> (o2 + o1).compareTo(o1 + o2));

        // 문자열 두개 합쳤을 떄 크기 비교
        // 3034 != 3430a
        /*
        Arrays.sort(result, new Comparator<String>() {

			@Override
			public int compare(String o1, String o2) {

				return ((o2 + o1).compareTo(o1 + o2));
			}
		});
        */
        


		// 0만 여러개 있는 배열의 경우 하나의 0만 리턴
		if(result[0].equals("0")) {
			return "0";
		}
		
		String answer = "";
		// 정렬된 문자 하나로 합치기
		for (String a : result) {
			answer += a;
		}
		return answer;
	}
} //100%


/*
import java.util.*;

class Solution {
    
    public String solution(int[] arr) {
        String answer = "";
        
        int factor = 1;
		Queue<Integer>[] bucket = new LinkedList[10];
		for(int i=0; i<10; ++i) bucket[i] = new LinkedList<>();
		
		for(int d=0; d<2; d++){
		    for(int i=0; i<arr.length; i++){
                bucket[(arr[i]/factor)%10].add(arr[i]);
            }
			for(int i=0, j=0; i<10; i++){
				while(!bucket[i].isEmpty()) arr[j++]=bucket[i].poll();
			} 
            factor*=10;
		}
        
        for(int i=0; i<arr.length; i++) System.out.print(arr[i]+" ");
        
        return answer;
    }
}
*/ 

import java.util.*;

class Solution {
	public String solution(int[] numbers) {
        
        String answer = "";
		String[] result = new String[numbers.length];
		for(int i=0; i<numbers.length; i++) result[i]=String.valueOf(numbers[i]);
        Arrays.sort(result, (o1,o2) -> (o2+o1).compareTo(o1+o2));
        for (String a : result) answer+=a;
        if(answer.charAt(0)=='0') return "0"; 
		return answer;
        
	}
} //100%


import java.util.*;

class Solution {
    public String solution(int[] numbers) {
        
        String answer = "";
        String[] arr=new String[numbers.length];
        for(int i=0; i<numbers.length; i++) arr[i]=String.valueOf(numbers[i]);
        Arrays.sort(arr, (o1, o2)->(o2+o1).compareTo(o1+o2));
        for(int i=0; i<arr.length; i++) answer+=arr[i];
        if(arr[0].equals("0")) return "0";
        
        return answer;
    }
}//100%

import java.util.*;

class Solution {
    public String solution(int[] numbers) {

        String answer="";
        String[] arr=new String[numbers.length];
        for(int i=0; i<numbers.length; i++) arr[i]=String.valueOf(numbers[i]);
        Arrays.sort(arr, (o1, o2)->(o2+o1).compareTo(o1+o2));
        for(String val : arr) answer+=val;
        if(arr[0].equals("0")) return "0";
        
        return answer;
    }
}//100%
