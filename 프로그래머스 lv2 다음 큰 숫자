//num을 binary로 변환한 뒤, 1의 개수를 반환하는 method

class Solution {
    public int solution(int n) {

        int answer = 0;
        int A = Integer.bitCount(n);

        while(true){
            n++;
            int B= Integer.bitCount(n);
            if(A==B){
                answer=n;
                break;
            }
        }

        return answer;
    }
}

/*
import java.util.*;
import java.lang.*;

class Solution {
    public int solution(int n) {
        
        String binary=Integer.toBinaryString(n);
        String s="";
        
        int total=0;
        int l=binary.length();
        boolean check=true;
        int answer=0;
        
        for(int i=0; i<l; i++){
            if(binary.charAt(i)=='1') total++;
            else if(binary.charAt(i)=='0') check=false;
        }
        
        if(check==false){
            int index=0;
            for(int i=l-1; i>=0; i--){
                if(binary.charAt(i)=='0'){
                    binary.replace('0', '1');
                    index=i;
                    break;
                } 
            }
            if(index<l-1){
                for(int i=l-1; i>index; i--){
                    if(binary.charAt(i)=='1'){
                        binary.replace('1', '0');
                        break;
                    } 
                }
                answer=Integer.parseInt(binary, 2);
            }
            else answer=Integer.parseInt(binary, 2);
        }
        else if(check==true){
            for(int i=0; i<l-1; i++) s+='1';
            s='0'+s;
            s='1'+s;
            answer=Integer.parseInt(s, 2);
        }
        
        return answer;
    }
}
*/ 5%

/*import java.util.*;
import java.lang.*;

class Solution {
    public int solution(int n) {
        
        String binary = Integer.toBinaryString(n);
        
        boolean ans = true;
        for(int i=binary.length()-1; i>=0; i--){
            if(binary.charAt(i)=='0') {
                ans=false;
                break;
            }
        }
        if(ans==true){
            for(int i=binary.length()-1; i>=0; i--) binary.replace('1', '0');
            binary=1+binary;
        }
        else{
            int index=0;
            for(int i=binary.length()-1; i>=0; i--){
                if(binary.charAt(i)=='0'){
                    binary.replace('0', '1');
                    index=i;
                    break;
                }
            }
            for(int i=index+1; i>=0; i--) binary.replace('1', '0');
        }
        
        int binaryToDecimal = Integer.parseInt(binary, 2);
        
        return binaryToDecimal;
    }
}*/

/*
import java.util.*;

class Solution {
    
    public int binTen(String num){
        int answer=0;
        int count=0;
        for(int i=num.length()-1; i>=0; i--){
            String s=num.charAt(i)+"";
            System.out.println(Integer.parseInt(s)+":"+(int)Math.pow(2, count));
            answer+=Integer.parseInt(s)*(int)Math.pow(2, count);
            count++;
        }
        return answer;
    }
    
    public int solution(int n) {
        int answer=0;
        int count=0;
        String sub="";
        
        while(n>0){
            sub=n%2+sub;
            n/=2;
        }
        
        for(int i=sub.length()-1; i>=0; i--){
            char c=sub.charAt(i);
            if(c=='0') break;
            count++;
        }
        
        String s="";
        if(count!=sub.length()) s=sub.substring(0, sub.length()-1-count);
        s=s+1;
        if(count==1) return binTen(s);//Integer.parseInt(s);
        for(int i=sub.length()-count; i<sub.length(); i++) s+=0;
        answer=binTen(s);//Integer.parseInt(s);
        
        return answer;
    }
}
*/
