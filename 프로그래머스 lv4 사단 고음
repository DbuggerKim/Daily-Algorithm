/*
import java.util.*;

class Solution {
    int answer=0;
    String[] arr={"*","+","+"};
    
    public int solution(int n) {
        dfs("",0,n);
        return answer;
    }
    
    public void dfs(String sub, int count, int n) {
        if(cal(sub)==n) {
            answer++;
            return;
        }
        for(int i=0; i<2; i++) {
            dfs(sub+arr[i],count+1,n);
            dfs(arr[i]+sub,count+1, n);
        }
    }
    
    public int cal(String sub) {
        int num=1;
        for(int i=0; i<sub.length(); i++) {
            char c=sub.charAt(i);
            switch(c) {
                case '*' :  num*=3;
                            break;
                case '+' :  num+=1;
                            break;
                default :   break;
            }
        }
        return num;
    }
}
*/ //TO

//https://train-validation-test.tistory.com/entry/프로그래머스-Level-4-4단-고음-Java

class Solution {    
        public int solution(int n) {
            return check(n-2,2);
        }
        private int check(int n, int p) { // n이 현재 값 , p가 plus의 개수
            if(n==3 && p==2)return 1;
            else if(n<3 ||  Math.log(n)/Math.log(3)*2<p)return 0;
            else if(n==3 && p==3) return 0;
            return check(n-1,p+1)+(n%3==0&&p>1?check(n/3,p-2):0);
        }
    } //100%
