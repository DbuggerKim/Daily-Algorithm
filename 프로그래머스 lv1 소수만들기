import java.util.*;

class Solution {
    
    public boolean isPrime(int n){
        boolean answer = true;
        if(n<2) return false;
        for(int i=2; i<n; i++){
            if(n%i==0) return false;
        }
        return answer;
    }
    
    public int solution(int[] nums) {
        int answer = 0;
        boolean [] flag = new boolean [nums.length];
        Arrays.fill(flag, false);
        
        for(int i=0; i<nums.length; i++){
            for(int j=i; j<nums.length; j++){
                for(int k=j; k<nums.length; k++){
                    if(isPrime(nums[i]+nums[j]+nums[k]) && nums[i]!=nums[j] && nums[j]!=nums[k] && nums[i]!=nums[k]) {
                        answer++; 
                        //System.out.println(nums[i]+" "+nums[j]+" "+nums[k]);
                    }
                }
            }
        }
        return answer;
    }
} //100%


import java.util.*;

class Solution {
    
    public boolean isPrime(int n){
        if(n<2) return false;
        for(int i=2; i<n; i++){
            if(n%i==0) return false;
        }
        return true;
    }
    
    public int solution(int[] nums) {
        int answer=0;
        
        for(int i=0; i<nums.length-2; i++){
            for(int j=i+1; j<nums.length-1; j++){
                for(int k=j+1; k<nums.length; k++){
                    int sum=nums[i]+nums[j]+nums[k];
                    if(isPrime(sum)) answer++;
                }
            }
        }

        return answer;
    }
} //100%
