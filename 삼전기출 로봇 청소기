dr = [-1, 0, 1, 0]
dc = [0, 1, 0, -1]

n, m = map(int, input().split())
r, c, d = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(n)]
visited = [[0]*m for _ in range(n)]

visited[r][c] = 1
cnt = 1

while True:
    flag = 0
    for _ in range(4):
        d = (d+3) % 4
        nr = r + dr[d]
        nc = c + dc[d]

        if 0 <= nr < n and 0 <= nc < m and arr[nr][nc] == 0:
            if visited[nr][nc] == 0:
                visited[nr][nc] = 1
                cnt += 1
                r = nr
                c = nc
                flag = 1
                break

    if flag == 0:
        if arr[r-dr[d]][c-dc[d]] == 1:
            print(cnt)
            break
        else: r, c = r-dr[d], c-dc[d]

# https://velog.io/@sin5015243/백준-14503-로봇-청소기-Python

‘’’
n,m=map(int,input().split())
r,c,d=map(int,input().split())
graph=[[0]*m for _ in range(n)]
for i in range(n):
  graph[i]=list(map(int,input().split()))

answer=0

x,y,dir=r,c,d
dx=[-1,0,1,0]
dy=[0,-1,0,1]

while 0<=x<n and 0<=y<m and graph[x][y]==0:
  for i in range(4):
    if graph[x][y]==0:
      answer+=1
      nx=x+dx[i]
      ny=y+dy[i]
      if dir==0 or graph[nx-1][ny]==0: 
        x-=1
        answer+=1
      elif dir==1 or graph[nx][ny-1]==0: 
        y-=1
        answer+=1
      elif dir==2 or graph[nx+1][ny]==0: 
        x+=1
        answer+=1
      elif dir==3 or graph[nx][ny+1]==0: 
        y+=1
        answer+=1
    else: 
      if graph[x][y]:

      else: break
      
‘’’
