import java.util.*;

class Solution {
    public int solution(int[] A) {
    
        int count=0;
        int total=0;

        for(int i=1; i<A.length-1; i++)
            if(A[i-1]<A[i] && A[i+1]<A[i]) count++;

        if(count>1) total++;
        count=0;

        for(int i=1; i<A.length-2; i++){
            for(int j=i; j<A.length-1; j++){
                if(A[i-1]<A[i] && A[i+1]<A[i] && A[j-1]<A[j] && A[j+1]<A[i]) count++;
            }
        }

        if(count>1) total++;
        count=0;

        for(int i=1; i<A.length-3; i++){
            for(int j=i; j<A.length-2; j++){
                for(int k=j; k<A.length-1; k++)
                    if(A[i-1]<A[i] && A[i+1]<A[i] && A[j-1]<A[j] && A[j+1]<A[i]&& A[k-1]<A[k] && A[k+1]<A[k]) count++;
            }
        }

        if(count>1) total++;


        return total;
    }
}

//9%


//https://github.com/Mickey0521/Codility/blob/master/Peaks.java

import java.util.*;

class Solution {
    public int solution(int[] A) {
        
        ArrayList<Integer>list=new ArrayList<>();
        for(int i=1; i<A.length-1; i++) {
            if(A[i-1]<A[i] && A[i]>A[i+1]) list.add(i);
        }

        for(int num=A.length; num>=1; num--){
            if(A.length%num==0) {
                int block=0;
                for(int index : list){
                    if(index/(A.length/num)==block) block++;
                }
                if(block==num) return num;
            }
        } 

        return 0;
    }
}

//100%
