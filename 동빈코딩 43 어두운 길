def find_parent(parent,x):
  if parent[x]!=x:
    parent[x]=find_parent(parent,parent[x])
  return parent[x]

def union_parent(parent,a,b):
  a=find_parent(parent,a)
  b=find_parent(parent,b)
  if a<b: parent[b]=a
  else: parent[a]=b

n,m=map(int,input().split())
parent=[0]*(n+1)
for i in range(1,n+1): parent[i]=i

edges=[]
for _ in range(m):
  x,y,z=map(int,input().split())
  edges.append((z,x,y))
edges.sort()

total=0 #전체 가로등 비용
result=0 #최종 비용
for edge in edges:
  cost,a,b=edge
  total+=cost
  #사이클 발생 체크
  if find_parent(parent,a)!=find_parent(parent,b):
    union_parent(parent,a,b)
    result+=cost
print(total-result)

‘’’
7 11
0 1 7
0 3 5
1 2 8
1 3 9
1 4 7
2 4 5
3 4 15
3 5 6
4 5 8
4 6 9
5 6 11
‘’’
