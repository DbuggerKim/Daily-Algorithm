/*import java.util.*;

class Solution {
    public int solution(int N) {
        // write your code in Java SE 8
        int answer=0;

        for(int i=0; i<=N; i++){
            if(Math.pow(2, i)*i==N){
                answer=i;
                break;
            }
        }

        return answer;
    }
}*/ //12%

/*
import java.util.*;

class Solution {
    public int isPow(LinkedList<Integer> list){
        int max=Integer.MIN_VALUE;
        for(int i=0; i<list.size(); i++){
            int output=list.get(i);
            int count=0;
            while(output%2==0) {
                count++;
                output/=2;
            } max=Math.max(count, max);
        }
        return max;
    }

    public int solution(int N) {
        LinkedList <Integer> list = new LinkedList<>();
        for(int i=1; i<=N; i++){
            if(N%i==0 && i%2==0) list.add(i);
        }
        return isPow(list);
    }
}
*/ //37%


/*
import java.util.*;

class Solution {
    public int solution(int N) {
        
        int answer=0;

        for(int i=N; i>0; i--){
            if(N%Math.pow(2, i)==0){
                answer=i; 
                break;
            }
        }

        return answer;
    }
}
*/ 62% TO


import java.util.*;

class Solution {
    public int solution(int N) {
        
        int answer=0;

        for(int i=(int)Math.sqrt(N); i>=0; i--){
            if(N%Math.pow(2, i)==0){
                answer=i; 
                break;
            }
        }

        return answer;
    }
}
//100%
