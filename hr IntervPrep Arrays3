import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

     public static long arrayManipulation(int n, List<List<Integer>> queries) {
         
        long max = 0;
        long x = 0;
        int[] arr = new int[n+1];

        for(int i=0; i<queries.size(); i++){
            int a = queries.get(i).get(0);
            int b = queries.get(i).get(1);
            int k = queries.get(i).get(2);
            
            arr[a]=arr[a]+k;
            if((b+1)<=n) arr[b+1]=arr[b+1]-k;
        }

        for(int i=1; i<n+1; i++){
            x=x+arr[i];
            if(max<x) max=x;
        }

        return max;
    }

    /*public static long arrayManipulation(int n, List<List<Integer>> queries)    {
                
        int[][] arr = new int [queries.size()+1][n];
        int [][] arr2 = new int [queries.size()][3];
        long temp=0;
        
        for(int l=0; l<queries.size(); l++) {  
            arr2[l][0]=queries.get(l).get(0)-1;
            arr2[l][1]=queries.get(l).get(1)-1;
            arr2[l][2]=queries.get(l).get(2);
        }
        
        for(int k=0; k<queries.size(); k++){
            for(int i=0; i<queries.size(); i++){
                for(int j=arr2[i][0]; j<=arr2[i][1]; j++){    
                    arr[k+1][j]+=arr2[i][2];
                    temp=Math.max(temp, arr[k+1][j]);
                }
            }
        }
        
        return temp;
    }*/
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int m = Integer.parseInt(firstMultipleInput[1]);

        List<List<Integer>> queries = new ArrayList<>();

        IntStream.range(0, m).forEach(i -> {
            try {
                queries.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        long result = Result.arrayManipulation(n, queries);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
