# https://velog.io/@ms269/백준-14890-경사로-파이썬-Python

def pos(now):
    for j in range(1,n):
        #1.차이가 1만 경사로 설치 가능
        if abs(now[j]-now[j-1])>1: return False
        #2. 현재 높이 < 이전 높이, 경사로 설치를 위해 오른쪽 스캔 후 낮은 곳에 경사로 설치
        if now[j]<now[j-1]:
            #경사로 연속으로 설치 최대 가능 길이
            for k in range(l):
                # 범위 넘어감 or 이미 설치함 or 낮은 곳의 높이가 다른 경우
                if j+k>=n or used[j+k] or now[j]!=now[j+k]: return False
                # 높이가 같은 경우 사용 여부 체크
                if now[j]==now[j+k]: used[j+k]=True
        #3. 현재 높이 > 이전 높이, 경사로 설치를 위해 왼쪽 스캔 후 낮은 곳에 경사로 설치
        elif now[j]>now[j-1]:
            for k in range(l):
                if j-k-1<0 or now[j-1]!=now[j-k-1] or used[j-k-1]: return False
                if now[j-1]==now[j-k-1]: used[j-k-1]=True
    #문제 없을 시 설치 가능
    return True

n, l = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
result = 0

#행 확인
for i in range(n):
    used = [False for _ in range(n)]
    if pos(graph[i]): result += 1

#열 확인
for i in range(n):
    used = [False for _ in range(n)]
    if pos([graph[j][i] for j in range(n)]): result += 1

print(result)
