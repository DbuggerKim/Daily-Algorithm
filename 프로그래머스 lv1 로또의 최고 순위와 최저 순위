import java.util.*;

class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int [2];
        int count=0;
        int zero=0;
        
        HashMap <Integer, Integer> map = new HashMap <>();
        for(Integer val : lottos) map.put(val, map.getOrDefault(val, 0)+1);
        for(Integer val : win_nums) map.put(val, map.getOrDefault(val, 0)-1);
        
        for(Integer val : map.keySet()){
            if(map.get(val)==0) count++;
            if(val==0) zero=map.get(val);
        }
        
        int max = count+zero;
        int min = count;
        
        System.out.println(max+" "+min);
        
        switch (max){
            case 6 : answer[0]=1; break;
            case 5 : answer[0]=2; break;
            case 4 : answer[0]=3; break;
            case 3 : answer[0]=4; break;
            case 2 : answer[0]=5; break;
            default : answer[0]=6; break;
        }
        
        switch (min){
            case 6 : answer[1]=1; break;
            case 5 : answer[1]=2; break;
            case 4 : answer[1]=3; break;
            case 3 : answer[1]=4; break;
            case 2 : answer[1]=5; break;
            default : answer[1]=6; break;
        }
        
        return answer;
    }
} //100%


import java.util.*;

class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int[] answer = new int [2];
        int count=0;//
        int zero=0;//
        
        HashMap <Integer, Integer> map = new HashMap <>();
        for(Integer val : lottos) map.put(val, map.getOrDefault(val, 0)+1);
        for(Integer val : win_nums) map.put(val, map.getOrDefault(val, 0)-1);
        for(Integer val : map.keySet()){
            if(map.get(val)==0) count++;//필수적으로 맞춘 번호 개수
            if(val==0) zero=map.get(val); //지워진 번호 개수
        }
        
        int max = count+zero; //필수+지워진 번호 맞춘 경우
        int min = count; //필수+지워진 번호 틀린경우
        
        switch (max){
            case 6 : answer[0]=1; break;
            case 5 : answer[0]=2; break;
            case 4 : answer[0]=3; break;
            case 3 : answer[0]=4; break;
            case 2 : answer[0]=5; break;
            default : answer[0]=6; break;
        }
        
        switch (min){
            case 6 : answer[1]=1; break;
            case 5 : answer[1]=2; break;
            case 4 : answer[1]=3; break;
            case 3 : answer[1]=4; break;
            case 2 : answer[1]=5; break;
            default : answer[1]=6; break;
        }
        
        return answer;
    }
} //100%
