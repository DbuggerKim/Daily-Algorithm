for tc in range(int(input())):
  n,m=map(int,input().split())
  array=list(map(int,input().split()))
  
  dp=[]
  index=0
  for i in range(n):
    dp.append(array[index:index+m])
    index+=m
  for j in range(1,m):
    for i in range(n):
      #왼쪽 위에서 오는 경우
      if i==0: leftup=0
      else: leftup=dp[i-1][j-1]
      #왼쪽 아래에서 오는 경우
      if i==n-1: leftdown=0
      else: leftdown=dp[i+1][j-1]
      #왼쪽에서 오는 경우
      left=dp[i][j-1]
      dp[i][j]=dp[i][j]+max(leftup,leftdown,left)

  result=0
  for i in range(n): result=max(result,dp[i][m-1])
  print(result)


‘’’
n,m=map(int,input().split())
arr=[0]*(n*m)
arr=list(map(int,input().split()))
graph=[[0]*m for _ in range(n)]
print(graph)
for i in range(n):
  for j in range(m):
    print(i,j,i*m+j)
    graph[i][j]=arr[i*m+j]

print(graph)

big=0
for i in range(n):
  big=max(big,graph[i][0])
print(big)

for j in range(0,m-1):
  if i-1>=0 and i+1<n:
    big+=max(graph[i-1][j+1],max(graph[i][j+1],graph[i+1][j+1]))
  if i==0:
    big+=max(graph[0][j+1],graph[1][j+1])
  if i==n-1:
    big+=max(graph[n-1][j+1],graph[n-2][j+1])
print(big)
‘’’
