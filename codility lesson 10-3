import java.util.*;

class Solution {
    public int solution(int[] A) {

        int count=0;
        LinkedList<Integer> list = new LinkedList<Integer>();

        for(int i=1; i<A.length-1; i++){
            if(A[i-1]<A[i] && A[i+1]<A[i]) {
                count++;
                list.add(i);
            }
        }

        int K=2;
        int comp=list.get(0);

        for(int i=1; i<list.size(); i++){
            if(Math.abs(comp-list.get(i))>K) K++;
            comp=list.get(i);
        }

        return K;

    }
}

//20%


import java.util.*;


class Solution {
    public int solution(int[] A) {

        LinkedList<Integer> list = new LinkedList<Integer>();

        for(int i=1; i<A.length-1; i++){
            if(A[i-1]<A[i] && A[i+1]<A[i]) {
                list.add(i);
            }
        }

        //for(int i=0; i<list.size();i++)
        //System.out.print(list.get(i));

        int K=2;
        int comp=list.get(0);

        for(int j=1; j<list.size(); j++){
            if(Math.abs(comp-list.get(j))>=K) K++;
            comp=list.get(j);
        }

        return K-1;

    }
} //20%


import java.util.*;
import java.lang.Math;

class Solution {
    public int solution(int[] A) {

        LinkedList<Integer> list = new LinkedList<Integer>();
        
        for(int i=1; i<A.length-1; i++){
            if(A[i-1]<A[i] && A[i+1]<A[i]) {
                list.add(i);
            }
        }

        /*for(int i=0; i<list.size();i++)
            System.out.print(list.get(i)+" ");*/
        int dist =2;
        int total=0;
        int max=0;
        
        while(dist<=list.size()){
            for(int i=0; i<list.size()-1; i++){
                for(int j=i+1; j<list.size(); j++){
                    if(dist==Math.abs(list.get(i)-list.get(j))) total++;
                }
            }
            if(dist>=total && max<total) max=total;
            dist++;
        }

        return max;

    }
} //13%
